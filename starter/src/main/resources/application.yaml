spring:
  datasource:
    url: ${rulenumber.db.url}
    #    如果手工 build，很多时候基本设置就不起作用了，因为 Hikari 等没有 url 属性(但有一个jdbcUrl属性)，
    #    Spring Boot可以支持，见 DataSourceConfiguration，但手工 build 则需自行处理
    jdbc-url: ${spring.datasource.url}
    username: ${rulenumber.db.username}
    password: ${rulenumber.db.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      connection-test-query: SELECT 1 FROM DUAL
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: SpringBootDemoHikariCP
      max-lifetime: 60000
      connection-timeout: 3000
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      #      create ----每次运行该程序，没有表格会新建表格，表内有数据会清空
      #      create-drop ----每次程序结束的时候会清空表
      #      update ---- 每次运行程序，没有表格会新建表格，表内有数据不会清空，只会更新
      #      validate ---- 运行程序会校验数据与数据库的字段类型是否相同，不同会报错。
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    open-in-view: true
  output:
    ansi:
#      彩色日志，不启用时配置文件中色彩配置可能无效
      enabled: always
  profiles:
    include: db
server:
  port: 8080
  servlet:
    context-path: /rulenumbergenerator
logging:
#  指定日志配置文件
  config: "classpath:config/logback.xml"
